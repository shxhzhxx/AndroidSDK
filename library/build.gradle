apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
group='com.github.shxhzhxx'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.annotation:annotation:1.0.1'
    implementation 'androidx.exifinterface:exifinterface:1.0.0-rc02'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.github.shxhzhxx:ImageLoader:2.0.1'
    implementation 'com.github.yalantis:ucrop:2.2.2'
    implementation 'com.github.chrisbanes:PhotoView:2.1.4'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //1.1.0 androidx 版本 下拉刷新，上拉加载第三方库
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-3'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-andx-3'
}

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}